---
import {Navigation} from "@/config/index.ts"
import { getTranslation } from "@/intl/getTranslation"
import DE from "@/public/translations/de.json"
const {blogPosts} = Astro.props;
---

<style>
.blogPost {

  .meta {
    line-height: 1;
    align-items: center;
    font-family: var(--fontFamilyMono);
  }

  .badges {
    --gap: 0;
    align-items: baseline;
    font-size: var(--s-1);
    color: var(--color-text2);
    border-collapse: collapse;
  }

  .badges .badge:not(:last-child) {
      border-right: none;
   }
}
</style>

<ul class="list-reset stack -layout-xl w-full">
{blogPosts.map((blogPost, postIndex) => (
    <li class="stack | blogPost">
      <article class="stack -layout-3xs">
          <a href={`${Navigation.blogPost.url}/${blogPost.slug}`}><h2 class="typo-xl -bold font-headline">
          {blogPost.title}</h2>
          </a>
          <p>
          {blogPost.description}</p>
          <div class="cluster typo-s -layout-s | meta">
          <span class="badge lang">{blogPost.lang.toLowerCase()}</span>
          <time class="date"><span data-translate="general.from">
          {getTranslation('general.from', DE)}
          </span> {new Date(blogPost.date).toLocaleDateString()}</time> - <div class="cluster | badges">{blogPost.tags.map((tag, i) => (
            <span class="badge">{tag}</span>
          ))}
          </div>
          </div>
          </article>
        {postIndex !== blogPosts.length - 1 && (<hr />)}
        </li>
      ))}
</ul>
