// Layout classes that handle 80% of the layout

.box {
  padding-inline: var(--gap, var(--defaultPadding-horizontal));
  padding-block: var(--gap, var(--defaultPadding-vertical));
}

.stack {
  display: grid;
  gap: var(--gap, var(--s2));
}


.flow > * + * {
  margin-block-start: var(--gap, var(--s2));
}

.flow > *:is(h1,h2,h3,h4,h5,h6) {
  --gap: var(--s3);
}

.flow > p + p {
  --gap: var(--s0);
}

.flow .breakAfter {
    margin-block-end: auto;
}

.section {
  padding-block: var(--sectionPadding);
}

.layout-container {
  margin-inline: auto;
  width: 100%;
  max-width: var(--containerMaxWidth);
  padding-inline: var(--defaultPadding-horizontal);
  display: grid;
  grid-template-columns: 1fr minmax(10rem, var(--measure)) 1fr;
  justify-items: start;
}

.layout-container > *:not(figure, .full-width) {
    grid-column-start: 2;
    grid-column-end: 3;
  }

.layout-container > figure,  .layout-container > .full-width {
    grid-column-start: 1;
    grid-column-end: 4;
}

.cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gap, var(--s1));
}

.with-sidebar {
  --min-size: 50%;

  width: 100%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: var(--gap, var(--s2));
}

.with-sidebar [data-aside] {
    flex-grow: 1;
    min-width: min-content;
}

.with-sidebar [data-grow] {
    flex-basis: 0;
    flex-grow: 999;
    min-width: var(--min-size);
}


.-layout-xl {
  --gap: var(--s3)
}

.-layout-l {
  --gap: var(--s2)
}

.-layout-m {
  --gap: var(--s1)
}

.-layout-s {
  --gap: var(--s0)
}

.-layout-xs {
  --gap: var(--s-1)
}

.-layout-2xs {
  --gap: var(--s-2)
}
.-layout-3xs {
  --gap: var(--s-3)
}